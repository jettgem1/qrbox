rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own boxes
    match /boxes/{boxId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can only read/write their own groups
    match /groups/{groupId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can only read/write their own categories
    match /categories/{categoryId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can only read/write items in their own boxes
    match /boxes/{boxId}/items/{itemId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/boxes/$(boxId)) &&
        get(/databases/$(database)/documents/boxes/$(boxId)).data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/boxes/$(boxId)) &&
        get(/databases/$(database)/documents/boxes/$(boxId)).data.userId == request.auth.uid;
    }
  }
} 